*,
*::before,
*::after {
  box-sizing: border-box;
}

body{
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  padding-top: 3.5em; /* 47px; */
  padding-left: .625em; /* 10px; */
}

.playwrite {
  font-family: "Playwrite IT Moderna", cursive;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
}

.title-space{
  display: flex;
  position: fixed;
  justify-content: center;
  top: 0;
  right: 0;
  left: 0;
  z-index: 200;
}

.title-space > *{
  font-size: 2rem;
  color: wheat;
  margin: 0;
  /* text-decoration: none; */
  /* padding: 0.875em 0.75em; */
}


/*Ciò che segue è il css per i comandi CRUD*/

.crud-bar{
  display: flex;
}

.icon-crud{
  border-radius: 8px;
  cursor: pointer;
  border: none;
  background: transparent;
}
.icon-crud img{
  width: 1.875rem; /* 30px */
  vertical-align: middle;
  padding: 0.625em 0; /* 10px 0px;  */
}

.icon-crud p{
  /*display: inline-block;*/
  display: none; /* At start, the descriptions of the option should not be visible for narrower screens*/
  margin: 0em;
  font-size: 1rem;
}

/*REMINDER: hover effects does not work on mobile devices. */
.icon-crud:active p, .icon-crud:hover p{ /*In this way while I am activating the button it will become visible the p will become visible */
  display: inline-block;
}
  
.icon-crud:active, .icon-crud:hover{
  background-color: rgba(255, 246, 174, 0.537);
}


@media screen and (min-width: 40rem){
  .icon-crud p{
    display: inline-block;
  }
}


dialog{
  position: fixed;
  border-style: none;
  background-color: rgb(251, 235, 206);
  border-radius: 6px;
  margin: 0;
  top: 50%;
  left: 50%;
  transform: translate(-50%,-50%); 
  padding: 0.625em; /*10px;*/
  max-height: 70%;
  width: min(25em,100%); /* 400px */;
  overflow: auto;
}

.crud-finestra{
  display: flex;
  flex-direction: column;
  padding: 0.625em; /*10px; */
}

.search-input{
  max-width: 15.6rem; /* 250px; */
}

.book-results{
  background-color: white;
  max-height: 20rem; 
  width: auto;
  overflow-x: scroll;
  padding:0 0.5rem;

}
book-res
.book-item{
  display: flex;
  align-items: center;
  padding: 0.625em; /* 10px; */
  gap: 0.5em;
  max-height: 12.25rem;
  overflow: scroll;
  align-items: start;
}

/* .book-info{
  overfl
} */

.book-info > * {
  margin: 0;
}

.book-item > img {
  width: 5rem;
} 

.books-on-loan-list{
  background-color: white;
  /* max-height: auto; */
  max-height: 12.5rem; /* 200px; */
  width: auto;
  overflow-x: scroll;
}

.spazio-libri{
  display: grid;
  grid-template-columns: repeat(auto-fit, 12.5rem); /* repeat(auto-fit, 200px); */
  text-align: center;
  justify-content: center; /*put the column at the center of the grid*/
  gap: 1rem;
  padding: 1em;
}

.libro *{
  margin: 0;
}

.libro > img {
  height: 18.75rem; /* 300px; */
  max-width: 100%;
}

.libro{
  cursor: pointer;
  max-width: 12.5rem; /* 200px; */
}

.chiudi{
  position: sticky;
  top: 0;
  right: 0;
  float: right;
  cursor: pointer;
}

.dettagli-img{
  flex: 1;
  align-self: start;
  display: flex;
  align-items: center;
  justify-content: center;
}

.dettagli-img img{
  width: min(300px,100%); /*300px is the size of the img that get fetched and is at L(Large) size. If the width gets wider than 300px it cause pixelation */
  position: sticky;
  top: 30px;
  object-fit: cover;
  border-radius: 4px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.dettagli-img, .book-details {
  width: 100%;
}

.edit-book-wrapper{
  display: grid;
  gap: 0.5rem;
  
  /* grid-template-columns: repeat(2,1fr); */
}

.edit-book-wrapper > *{
  display: flex;
  justify-content: space-around;
}

.desc-textarea{
  width: 100%;
  max-width: 400px;
}

.operation-result{
  display: none;
  /* position: absolute;
  bottom:-20px; */
  justify-content: center;
}

.operation-result img{
  height: 1.125rem; /* 18px; */
  margin-right: 0.3rem; /*5px;*/
}

.show{
  display: flex;
}

.window-content-wrapper{
  display: flex;
  column-gap: 1rem;
  justify-content: center;
  max-width: 100%;
}

.book-details{
  flex: 2;
  min-width: 0; /* Crucial for allowing flex item to shrink */
}

.book-details-container{
  /* Use CSS Grid for the two-column layout */
  display: flex;
  flex-direction: column;
  padding: 0.625em; /* 10px; */
  max-width: 100%; /* Ensure the container does not exceed the dialog width */
  gap: 1.7rem;
  flex-wrap: wrap;
}

.book-details .detail-item,
.book-details .descrizione {
  word-wrap: break-word; /* Older property, good fallback */
  overflow-wrap: break-word; /* Standard property for breaking long words/strings */
  /* Optional: Add vertical scroll if needed, though wrapping is usually preferred */
  overflow-y: auto;
  /* Optional: Ensure text doesn't overflow horizontally if wrapping fails */
   white-space: normal; /* Ensure text wraps normally */
   max-width: 100%; /* Prevent exceeding parent width */
   overflow-x: hidden; /* Hide horizontal overflow if absolutely necessary */
   display: block;/* Ensure block behavior helps wrapping */
}


@media screen and (min-width: 48rem) { /*(min-width: 768px) in this way in smaller devices it will still be readable*/
  .book-details-container {
    flex-direction: row;
  }

  dialog{
    width: max(25rem,70%); /* max(400px,70%); */
  }
}

.empty-state {
  text-align: center;
  font-size: 1.2rem;
  margin-top: 2rem;
}

.empty-state p {
  margin: 0.5rem 0;
  text-align: start;
}

.add-book-span:hover{
  cursor: pointer;
}

.add-book-span .icon {
  width: 1.875rem;
  vertical-align: middle;
  padding: 0.625em 0;
}

/*loader for when it fetchs the books*/
.loader {
  width: fit-content;
  padding: 1rem 0; 
  font-weight: bold;
  font-family: monospace;
  font-size: 1.875rem;
  clip-path: inset(0 3ch 0 0);
  animation: l4 1s steps(4) infinite;
}
.loader:before {
  content:"Loading..."
}
@keyframes l4 {to{clip-path: inset(0 -1ch 0 0)}}